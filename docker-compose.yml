version: "3.9"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: gropt
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://postgres:postgres@db:5432/gropt}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./db:/app/db
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: .env
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8080/api}
    depends_on:
      - api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["pnpm", "dev"]

  nginx:
    image: nginx:1.25
    depends_on:
      - web
      - api
    ports:
      - "${NGINX_PORT:-8080}:80"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  postgres_data:
